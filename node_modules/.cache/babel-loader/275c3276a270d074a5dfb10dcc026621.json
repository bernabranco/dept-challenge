{"ast":null,"code":"var _jsxFileName = \"/Users/bernardoagbranco/react-learn/depth-challenge-final/src/components/Nav/Burger/Burger.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect } from 'react';\nimport './Burger.css';\nimport icon1 from \"../../../icons/icon-menu1.svg\";\nimport icon2 from \"../../../icons/icon-menu2.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Burger(props) {\n  _s();\n\n  let [counterScroll, setCounterScroll] = useState(0);\n  let navcontainer = document.getElementById('nav-container');\n\n  const handleScroll = () => {\n    if (window.pageYOffset === 0) {\n      setCounterScroll(1);\n    } else {\n      setCounterScroll(0);\n    }\n  };\n\n  function toggleOpacity() {\n    if (counterScroll === 0) {\n      navcontainer.style.backgroundColor = 'transparent';\n    }\n\n    if (counterScroll === 1) {\n      navcontainer.style.backgroundColor = 'white';\n    }\n  }\n\n  useEffect(() => {\n    toggleOpacity();\n  }, [counterScroll]);\n  let [counter, setCounter] = useState(0);\n  let [icon, setIcon] = useState(icon1);\n\n  if (counter > 2) {\n    setCounter(1);\n  }\n\n  const toggleMenu = () => {\n    let navContainer = document.getElementById('nav-container');\n    let container = document.getElementById('nav-container-open');\n    let menutext = document.getElementById('menu-text');\n    let logopath = document.getElementById('path-logo');\n    let logoicon = document.getElementById('icon-logo');\n\n    if (counter === 1) {\n      navContainer.classList.add('nav-container-on');\n      navContainer.classList.remove('nav-container');\n      container.classList.add('nav-container-open');\n      container.classList.remove('nav-container-close');\n      menutext.style.opacity = '0';\n      logopath.style.fill = 'white';\n      setIcon(icon2);\n    } else if (counter === 2) {\n      navContainer.classList.add('nav-container');\n      navContainer.classList.remove('nav-container-on');\n      container.classList.add('nav-container-close');\n      container.classList.remove('nav-container-open');\n      menutext.style.opacity = '1';\n      logopath.style.fill = 'black';\n      setIcon(icon1);\n    }\n  };\n\n  useEffect(() => {\n    toggleMenu();\n  }, [counter]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"hamburger-container\",\n    onScroll: handleScroll,\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      id: \"menu-text\",\n      className: \"menu-text\",\n      onClick: () => setCounter(counter + 1),\n      children: \"MENU\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      alt: \"icon menu\",\n      src: icon,\n      id: \"burger-cross\",\n      className: \"burger-cross-off\",\n      onClick: () => setCounter(counter + 1)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Burger, \"2ykekMzKigD5HcOS6t6OCydiHfw=\");\n\n_c = Burger;\n\nvar _c;\n\n$RefreshReg$(_c, \"Burger\");","map":{"version":3,"sources":["/Users/bernardoagbranco/react-learn/depth-challenge-final/src/components/Nav/Burger/Burger.js"],"names":["React","useState","useEffect","Burger","props","counterScroll","setCounterScroll","navcontainer","document","getElementById","handleScroll","window","pageYOffset","toggleOpacity","style","backgroundColor","counter","setCounter","icon","setIcon","icon1","toggleMenu","navContainer","container","menutext","logopath","logoicon","classList","add","remove","opacity","fill","icon2"],"mappings":"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","sourcesContent":["import { React, useState, useEffect } from 'react';\nimport './Burger.css';\nimport icon1 from '../../../icons/icon-menu1.svg';\nimport icon2 from '../../../icons/icon-menu2.svg';\n\nexport default function Burger(props) {\n\n  let [counterScroll, setCounterScroll] = useState(0);\n\n  let navcontainer = document.getElementById('nav-container');\n\n\n  const handleScroll = () => {\n    if(window.pageYOffset===0){\n      setCounterScroll(1);\n    } else {\n      setCounterScroll(0);\n    }\n  }\n\n  function toggleOpacity(){\n    if(counterScroll === 0){\n      navcontainer.style.backgroundColor='transparent';\n    }\n\n    if(counterScroll === 1){\n      navcontainer.style.backgroundColor='white';\n    }\n  }\n\n  useEffect(() => {\n    toggleOpacity();\n  }, [counterScroll]);\n\n  let [counter, setCounter] = useState(0);\n  let [icon, setIcon] = useState(icon1);\n\n  if (counter > 2) {\n    setCounter(1);\n  }\n\n  const toggleMenu = () => {\n    let navContainer = document.getElementById('nav-container');\n    let container = document.getElementById('nav-container-open');\n    let menutext = document.getElementById('menu-text');\n    let logopath = document.getElementById('path-logo');\n    let logoicon = document.getElementById('icon-logo');\n\n    if (counter === 1) {\n      navContainer.classList.add('nav-container-on');\n      navContainer.classList.remove('nav-container');\n      container.classList.add('nav-container-open');\n      container.classList.remove('nav-container-close');\n      menutext.style.opacity='0';\n      logopath.style.fill='white';\n      setIcon(icon2);\n    } else if (counter === 2) {\n      navContainer.classList.add('nav-container');\n      navContainer.classList.remove('nav-container-on');\n      container.classList.add('nav-container-close');\n      container.classList.remove('nav-container-open');\n      menutext.style.opacity='1';\n      logopath.style.fill='black';\n      setIcon(icon1);\n    }\n  }\n\n  useEffect(() => {\n    toggleMenu();\n  }, [counter]);\n\n\n  return (\n    <div className='hamburger-container' onScroll={handleScroll}>\n      <p id = 'menu-text' className='menu-text' onClick={() => setCounter(counter + 1)}>MENU</p>\n      <img alt='icon menu' src={icon} id='burger-cross' className='burger-cross-off' onClick={() => setCounter(counter + 1)}></img>\n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}